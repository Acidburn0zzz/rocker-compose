FROM golang:1.5.1

{{ $version := (or .Version "local") }}
{{ $branch := (or .Env.GIT_BRANCH "none") }}
{{ $commit := (or .Env.GIT_COMMIT "") }}

ADD . /go/src/github.com/grammarly/rocker-compose
WORKDIR /go/src/github.com/grammarly/rocker-compose

ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1

{{ if .test }}
{{ if .TestArgs }}
ENV TESTARGS="{{ .TestArgs }}"
{{ end }}
ATTACH ["bash"]
RUN make test
{{ end }}

RUN go build \
    -a -installsuffix cgo \
    -ldflags "-X main.Version={{ $version }}  \
              -X main.GitCommit={{ $commit }} \
              -X main.GitBranch={{ $branch }} \
              -X main.BuildTime=$(TZ=GMT date '+%Y-%m-%d_%H:%M_GMT')" \
    -v -o /bin/rocker-compose

EXPORT /bin/rocker-compose

#========

FROM alpine:3.2

RUN apk --update add bash

RUN mkdir -p /opt/rocker-compose/bin
IMPORT rocker-compose /opt/rocker-compose/bin

ENV PATH=/opt/rocker-compose/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

CMD ["/opt/rocker-compose/bin/rocker-compose"]

PUSH dockerhub.grammarly.io/rocker-compose:{{ $branch }}

{{ if and (ne $version "local") (eq $branch "master") }}
    PUSH dockerhub.grammarly.io/rocker-compose:{{ $version }}
{{ end }}

